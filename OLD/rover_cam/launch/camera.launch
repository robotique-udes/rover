<?xml version='1.0'?>
<launch>
   <!-- launch video stream -->
   <include file="$(find video_stream_opencv)/launch/camera.launch" >
        <!-- node name and ros graph name -->
        <arg name="camera_name" value="camera1" />
        <!-- means video device 0, /dev/video0 -->
        <arg name="video_stream_provider" value="0" />
        <!-- set camera fps to (if the device allows) -->
        <arg name="set_camera_fps" value="30"/>
        <!-- set buffer queue size of frame capturing to -->
        <arg name="buffer_queue_size" value="100" />
        <!-- throttling the querying of frames to -->
        <arg name="fps" value="30" />
        <!-- setting frame_id -->
        <arg name="frame_id" value="camera1_link" />
        <!-- camera info loading, take care as it needs the "file:///" at the start , e.g.:
        "file:///$(find your_camera_package)/config/your_camera.yaml" -->
        <arg name="camera_info_url" value="" />
        <!-- flip the image horizontally (mirror it) -->
        <arg name="flip_horizontal" value="false" />
        <!-- flip the image vertically -->
        <arg name="flip_vertical" value="false" />
        <!-- visualize on an image_view window the stream generated -->
        <arg name="visualize" value="false" />
        <!-- <arg name="width" default="1080"/>
        <arg name="height" default="720"/> -->
   </include>

   <!-- Camera image filter -->
   <node pkg="rover_cam" type="camera_filter.py" name="camera1_filter" output="screen">
      <remap from="/image" to="/camera1/image_raw"/>
      <remap from="/image_filtered" to="image_filter/image"/>
      <param name="size_sampling_ratio" type="double" value="0.25"/>
      <param name="fps" type="int" value="5"/>
      <param name="gray_filter_activated" type="bool" value="true"/>
      <param name="size_filter_activated" type="bool" value="true"/>
      <param name="fps_filter_activated" type="bool" value="true"/>
   </node>
</launch>